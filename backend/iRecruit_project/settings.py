"""
Django settings for iRecruit_project project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import ssl
from datetime import timedelta
from pathlib import Path
from connection import setup_mongoengine_connection
from sendgrid import SendGridAPIClient
from dotenv import load_dotenv




# import connection
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'default_secret_key')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = os.getenv('DJANGO_DEBUG', 'False') == 'True'
DEBUG = False
ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', 'localhost,127.0.0.1,hazel-tea-419405.el.r.appspot.com').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'organization',
    'rest_framework',
    'drf_yasg',
    'corsheaders',
    'celery'
]

MIDDLEWARE = [
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'iRecruit_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'iRecruit_project.wsgi.application'

setup_mongoengine_connection()

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': os.getenv('MONGO_DB_NAME', 'iRecruit'),
        'CLIENT': {
            'host': os.getenv('MONGO_HOST', 'mongodb+srv://<username>:<password>@<cluster-url>/'),
            'username': os.getenv('MONGO_USERNAME', 'username'),
            'password': os.getenv('MONGO_PASSWORD', 'password'),
            'authSource': os.getenv('MONGO_AUTH_SOURCE', 'admin'),
        }
    }
}
MONGO_URI = os.getenv('MONGO_HOST', 'mongodb+srv://<username>:<password>@<cluster-url>/')




AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#     )
# }

REST_FRAMEWORK = {
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    # ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'organization.authentication.JWTAuthentication',
        'accounts.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    #'DEFAULT_PERMISSION_CLASSES': (
    #   'rest_framework.permissions.IsAuthenticated',
    #),
}

# JWT Settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=2),

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',
}


# CELERY Conf
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0
# CELERY_BROKER_URL = 'redis://default:sq0vadkhzf4l1aDuP29FlSJBlowDLRyj@redis-10276.c301.ap-south-1-1.ec2.cloud.redislabs.com:10276'

# CELERY_RESULT_BACKEND = 'mongodb'
# CELERY_MONGODB_BACKEND_SETTINGS = {
#     'host': 'hussain-cluster.x4qzsy8.mongodb.net/?retryWrites=true&w=majority&appName=hussain-cluster',
#     # 'host': 'hussain-cluster.x4qzsy8.mongodb.net/?retryWrites=true&w=majority&appName=hussain-cluster',
#     # 'username': "hussainazad01",
#     # 'password': "hussainazad",
#     'ssl': True,
#     'ssl_cert_reqs': ssl.CERT_NONE,
#     'database': 'iRecruit',
#     'taskmeta_collection': 'celery_results',
# }

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Kolkata'


API_KEY = "ae1c9b37-4987-11ee-addf-0200cd936042"


# SendGrid email configuration
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'apikey'  # This is always 'apikey' for SendGrid
EMAIL_HOST_PASSWORD = SENDGRID_API_KEY
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'adavadkardhruv@gmail.com'
sendgrid_client = SendGridAPIClient(SENDGRID_API_KEY)

CORS_ALLOW_HEADERS = [
    'Content-Type',
    'Authorization',
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Replace with your React development server port
    "http://127.0.0.1:8000",
    "https://hazel-tea-419405.el.r.appspot.com" 
]

